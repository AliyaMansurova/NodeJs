---
swagger: "2.0"
info:
  description: |
    This is a sample productStore server.
  version: 1.0.0
  title: Swagger productStore
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: localhost:8080
basePath: /api
tags:
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
- name: product
  description: Operations about product
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
schemes:
- http
paths:
  /cities:
    x-swagger-router-controller: city
    get:
      tags:
      - city
      summary: Finds cities
      description: Finds cities
      operationId: getAllCities
      responses:
        400:
          description: Invalid request
        404:
          description: Cities not found
    post:
      tags:
        - city
      summary: Add a new city to the store
      operationId: createCity
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: City object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/City'
      responses:
        405:
          description: Invalid input
  /cities/{cityId}:
    x-swagger-router-controller: city
    get:
      tags:
      - city
      summary: Get product by cityId
      operationId: getCityById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: cityId
        in: path
        description: The cityId that needs to be fetched.
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/City'
        400:
          description: Invalid cityId supplied
        404:
          description: City not found
    put:
      tags:
        - city
      summary: Updated product
      description: This can only be done by the logged in user.
      operationId: updateCity
      produces:
      - application/json
      - application/xml
      parameters:
      - name: cityId
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated city object
        required: true
        schema:
          $ref: '#/definitions/City'
      responses:
        400:
          description: Invalid cityId supplied
        404:
          description: City not found
    delete:
      tags:
      - city
      summary: Delete city
      description: Delete city.
      operationId: removeCity
      produces:
      - application/json
      - application/xml
      parameters:
      - name: cityId
        in: path
        description: The city that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid cityId supplied
        404:
          description: City not found
  /products:
    x-swagger-router-controller: product
    get:
      tags:
      - product
      summary: Finds products
      description: Finds products
      operationId: getAllProducts
      responses:
        400:
          description: Invalid request
        404:
          description: Products not found
    post:
      tags:
      - product
      summary: Add a new product to the store
      operationId: createProduct
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Product object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        405:
          description: Invalid input
  /products/{productId}:
    x-swagger-router-controller: product
    get:
      tags:
      - product
      summary: Get product by productId
      operationId: getProductById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: The productId that needs to be fetched.
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid productId supplied
        404:
          description: Product not found
    delete:
      tags:
      - product
      summary: Delete product
      description: This can only be done by the logged in user.
      operationId: removeProduct
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: The product that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid productId supplied
        404:
          description: Product not found
  /products/{productId}/review:
    x-swagger-router-controller: product
    get:
      tags:
      - product
      summary: Get review by productId
      operationId: getReviewByProductId
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: The review that needs to be fetched by productId.
        required: true
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid productId supplied
        404:
          description: Review not found
  /users:
    x-swagger-router-controller: user
    get:
      tags:
      - user
      summary: Finds users
      description: Finds users
      operationId: getAllUsers
      responses:
        400:
          description: Invalid request
        404:
          description: Users not found
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /users/{userId}:
    x-swagger-router-controller: user
    get:
      tags:
      - user
      summary: Get user by userId
      operationId: getUserById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: userId
        in: path
        description: The name that needs to be fetched.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid userId supplied
        404:
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: removeUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: userId
        in: path
        description: The userId that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
definitions:
  User:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
    xml:
      name: User
  Product:
    type: object
    required:
    - name
    properties:
      id:
        type: number
      name:
        type: string
        example: product1
  City:
    type: object
    required:
    - name
    properties:
      id:
        type: string
        example: 1
      name:
        type: string
        example: Moscow
      country:
        type: string
        example: Russia
      capital:
        type: boolean
        example: true
      location:
        type: object
        properties:
          lat:
            type: string
          long:
            type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
